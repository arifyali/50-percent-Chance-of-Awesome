summary(model)
setwd("~/Documents/Analytics 501 Fall 2015/50-percent-Chance-of-Awesome/part2_exploratory_analysis/")
political_data = read.csv("PoldataSPIndustriesStockData.csv")
# Null Hypothesis: There is no linear relation between the percentage of votes and the rank of
# industry contributions by condidate for the candidates
model <- lm(WINNER ~ CANDTOTAL + indrank + YrPercentChange,data=political_data)
summary(model)
Logit_pol_data = political_data[!duplicated(political_data[,c("STATE", "DISTRICT", "CANDIDATE")]),]
x = Logit_pol_data$CANDTOTAL[Logit_pol_data$INCUMBENT==1]
y = Logit_pol_data$CANDTOTAL[Logit_pol_data$INCUMBENT==0]
pol_t_test = t.test(x,y)
pol_t_test
?t.test
pol_t_test = t.test(x,y, paired = T)
pol_t_test = t.test(x,y)
pol_t_test
#### Cluster Analysis
setwd("~/Documents/Analytics 501 Fall 2015/50-percent-Chance-of-Awesome/part2_exploratory_analysis/")
political_data= read.csv("PoldataSPIndustries.csv")
### May change  what political data is later
#political_data = political_data[political_data$Party!="I",]
political_data$PARTY = as.character(political_data$PARTY)
for(i in c(2004, 2006, 2008, 2010, 2012, 2014)){
numeric_political_data = political_data[!duplicated(political_data[,c("CANDIDATE", "PARTY")]),
c("CANDIDATE","CANDTOTAL", "CANDTOTAL", "INCUMBENT",
"WINNER", "VOTES", "YEAR")]
numeric_political_data = numeric_political_data[complete.cases(numeric_political_data),]
#numeric_political_data = political_data[, numeric_characters]
numeric_political_data = numeric_political_data[complete.cases(numeric_political_data),]
numeric_political_data_subset = numeric_political_data[numeric_political_data$YEAR==i,]
numeric_political_data_subset = numeric_political_data_subset[,]
Political_hclustering = hclust(dist(numeric_political_data_subset))
png(paste("Clustering/hcluster_", i, ".png", sep = ""), width = 755, height = 1200)
plot(Political_hclustering, labels = numeric_political_data_subset$CANDIDATE)
dev.off()
}
names(political_data)
for(i in c(2004, 2006, 2008, 2010, 2012, 2014)){
numeric_political_data = political_data[!duplicated(political_data[,c("CANDIDATE", "PARTY")]) & political_data$YEAR==i,
c("CANDIDATE","CANDTOTAL", "VOTES")]
numeric_political_data = numeric_political_data[complete.cases(numeric_political_data),]
#numeric_political_data = political_data[, numeric_characters]
numeric_political_data = numeric_political_data[complete.cases(numeric_political_data),]
numeric_political_data_subset = numeric_political_data_subset[,]
Political_hclustering = hclust(dist(numeric_political_data_subset))
png(paste("Clustering/hcluster_", i, ".png", sep = ""), width = 755, height = 1200)
plot(Political_hclustering, labels = numeric_political_data_subset$CANDIDATE)
dev.off()
}
numeric_political_data = political_data[!duplicated(political_data[,c("CANDIDATE", "PARTY")]) & political_data$YEAR==i,
c("CANDIDATE","CANDTOTAL", "VOTES")]
numeric_political_data = numeric_political_data[complete.cases(numeric_political_data),]
#numeric_political_data = political_data[, numeric_characters]
numeric_political_data = numeric_political_data[complete.cases(numeric_political_data),]
Political_hclustering = hclust(dist(numeric_political_data))
View(numeric_political_data)
View(numeric_political_data)
